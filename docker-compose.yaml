version: "3.3"

services: # Palabra clave de Docker Compose.
  nginx: # Palabra no clave, descriptiva de un servicio.
    image: nginx:alpine # Imagen a extraer desde Docker Hub.
    ports: # Mapeado de puertos entre la máquina real y el contenedor.
      - "8080:80"
    networks: # Este servicio pertenece a la red: internal
      - internal
    volumes:
      - ./docker/nginx-default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  php:
    build:
      context: .
      dockerfile: docker/Dockerfile
    networks:
      - internal
    volumes:
      - ./:/var/www/html
  mysql:
    container_name: mysql
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
        MYSQL_DATABASE: ikanaide
        MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - '4306:3306'
    expose:
      - '3306'
    volumes:
      - ./database/ikanaide0531.sql:/docker-entrypoint-initdb.d/dump.sql
      - db:/var/lib/mysql
    networks:
      - internal

volumes:
  db:
    driver: local

networks:
  internal: # Nombre de la red.
    driver: bridge # Modo de conexión.